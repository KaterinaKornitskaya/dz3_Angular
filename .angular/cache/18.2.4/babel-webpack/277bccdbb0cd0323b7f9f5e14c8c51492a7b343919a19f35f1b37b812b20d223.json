{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Input, Component } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgFor } from '@angular/common';\nlet ChildComponent1 = class ChildComponent1 {\n  name = 'component1';\n  cite1 = 'Между *опой и диваном доллар никогда не пролетит.';\n  cite2 = 'У моих детей, конечно, будет компьютер. Но первым делом они получат книги.';\n  cite3 = 'Наслаждайтесь тем, что вы делаете и вы никогда в своей жизни не будете работать.';\n  cite4 = 'Жизнь несправедлива – привыкните к этому!';\n  cite5 = `Выберите ленивого человека для выполнения трудной работы. \n        Потому что ленивый человек найдет легкий способ eё выполнить.`;\n  cites = [this.cite2, this.cite3, this.cite4, this.cite5];\n  newCiteInChild1;\n  addNew() {\n    this.cites.push(this.newCiteInChild1);\n  }\n};\n__decorate([Input()], ChildComponent1.prototype, \"newCiteInChild1\", void 0);\nChildComponent1 = __decorate([Component({\n  selector: 'child1_comp',\n  standalone: true,\n  imports: [MatButtonModule, FormsModule, NgFor],\n  templateUrl: './child1.component.html'\n})], ChildComponent1);\nexport { ChildComponent1 };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}